!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARCHITECTURE_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
ASIO_STANDALONE	include/main.h	/^#define ASIO_STANDALONE$/;"	d
Base64	include/crypto.hpp	/^    class Base64 {$/;"	c	class:SimpleWeb::Crypto
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/Users\/harveybates\/Documents\/Phenobottle\/Phenobottle\/UserInterface\/web_application\/server$/;"	m
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/local\/Cellar\/cmake\/3.19.2\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/Users\/harveybates\/Documents\/Phenobottle\/Phenobottle\/UserInterface\/web_application\/server$/;"	m
COMPILER_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CONSTANTS_H	include/constants.h	/^#define CONSTANTS_H$/;"	d
CXX_STD	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#      define CXX_STD /;"	d	file:
CXX_STD	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
C_DIALECT	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
Connection	include/connection.h	/^class Connection : public std::enable_shared_from_this<Connection>{$/;"	c
Connection	src/connection.cpp	/^Connection::Connection(asio::io_context& io_context) : socket_(io_context){$/;"	f	class:Connection
Crypto	include/crypto.hpp	/^  class Crypto {$/;"	c	namespace:SimpleWeb
DEC	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
EQUALS	Makefile	/^EQUALS = =$/;"	m
HEX	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
ID_VOID_MAIN	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
MAX_READ_SIZE	include/serial.h	/^	int MAX_READ_SIZE = 1024;$/;"	m	class:Serial
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
PORT	include/serial.h	/^	const char* PORT = "\/dev\/tty.usbmodem81500001";$/;"	m	class:Serial
PORT	include/server.h	/^const unsigned short PORT = 443;$/;"	v
RM	Makefile	/^RM = \/usr\/local\/Cellar\/cmake\/3.19.2\/bin\/cmake -E rm -f$/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMPLE_WEB_CRYPTO_HPP	include/crypto.hpp	/^#define SIMPLE_WEB_CRYPTO_HPP$/;"	d
SIMULATE_ID	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
STRINGIFY	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
Serial	include/serial.h	/^class Serial{$/;"	c
Serial	src/serial.cpp	/^Serial::Serial(){$/;"	f	class:Serial
Server	include/server.h	/^class Server{$/;"	c
Server	notes.cpp	/^	Server(asio::io_context& io_context, std::uint16_t port) : $/;"	f	class:Server
Server	notes.cpp	/^class Server{$/;"	c	file:
Server	src/server.cpp	/^Server::Server(asio::io_context& io_context) : io_context_(io_context), $/;"	f	class:Server
Session	notes.cpp	/^		Session(asio::ip::tcp::socket&& socket) : $/;"	f	class:Session
Session	notes.cpp	/^class Session : public std::enable_shared_from_this<Session>{$/;"	c	file:
SimpleWeb	include/crypto.hpp	/^namespace SimpleWeb {$/;"	n
TEST_DATA_DIRECTORY	include/test_data.hpp	/^#define TEST_DATA_DIRECTORY /;"	d
_WIN32_WINNT	include/main.h	/^#define _WIN32_WINNT /;"	d
_data	include/connection.h	/^	char _data[max_length]; \/\/ To store incoming message from client$/;"	m	class:Connection
acceptor	notes.cpp	/^	asio::ip::tcp::acceptor acceptor;$/;"	m	class:Server	file:
acceptor_	include/server.h	/^	asio::ip::tcp::acceptor acceptor_; $/;"	m	class:Server
async_accept	notes.cpp	/^	void async_accept(){$/;"	f	class:Server
baudRate	include/serial.h	/^	int baudRate = 115200;$/;"	m	class:Serial
buffer_size	include/crypto.hpp	/^    const static std::size_t buffer_size = 131072;$/;"	m	class:SimpleWeb::Crypto
client	src/connection.cpp	/^typedef std::shared_ptr<Connection> client;$/;"	t	file:
close_port	src/serial.cpp	/^void Serial::close_port(){$/;"	f	class:Serial
configure	src/serial.cpp	/^void Serial::configure(const char * port){$/;"	f	class:Serial
const	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
constants	include/constants.h	/^namespace constants{$/;"	n
create	src/connection.cpp	/^client Connection::create(asio::io_context& io_context){$/;"	f	class:Connection
do_read	src/connection.cpp	/^void Connection::do_read(){$/;"	f	class:Connection
do_write	src/connection.cpp	/^void Connection::do_write(){$/;"	f	class:Connection
get_baudrate	src/serial.cpp	/^int Serial::get_baudrate(){$/;"	f	class:Serial
get_data	notes.cpp	/^void get_data(asio::ip::tcp::socket& socket){$/;"	f
get_port	src/serial.cpp	/^const char* Serial::get_port(){$/;"	f	class:Serial
handle_accept	src/server.cpp	/^void Server::handle_accept(Connection::pointer new_connection, $/;"	f	class:Server
handle_write	src/connection.cpp	/^void Connection::handle_write(const asio::error_code& \/*error*\/,$/;"	f	class:Connection
handshake	include/connection.h	/^	bool handshake = false;$/;"	m	class:Connection
info_arch	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
io_context	notes.cpp	/^	asio::io_context& io_context;$/;"	m	class:Server	file:
io_context_	include/server.h	/^	asio::io_context& io_context_; \/\/ Unique io_context for async functions$/;"	m	class:Server
list_ports	src/serial.cpp	/^std::vector<std::string> Serial::list_ports(){	$/;"	f	class:Serial
main	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	notes.cpp	/^int main(){$/;"	f
main	src/main.cpp	/^int main(){ $/;"	f
max_length	include/connection.h	/^const std::size_t max_length = 4096;$/;"	v
open_port	src/serial.cpp	/^int Serial::open_port(const char* port){$/;"	f	class:Serial
pointer	include/connection.h	/^	typedef std::shared_ptr<Connection> pointer;$/;"	t	class:Connection
qnxnto	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	CMakeFiles/3.19.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
recieve	src/serial.cpp	/^std::string Serial::recieve(){$/;"	f	class:Serial
send	src/serial.cpp	/^void Serial::send(char* msg){$/;"	f	class:Serial
send	src/serial.cpp	/^void Serial::send(const char * port, char* msg){$/;"	f	class:Serial
serial	src/main.cpp	/^Serial serial;$/;"	v
serialCommand	src/main.cpp	/^char* serialCommand;$/;"	v
serial_port	include/serial.h	/^	int serial_port = 0;$/;"	m	class:Serial
set_baudrate	src/serial.cpp	/^void Serial::set_baudrate(int rate){$/;"	f	class:Serial
set_serial_command	src/connection.cpp	/^void Connection::set_serial_command(char* cmd){$/;"	f	class:Connection
socket	notes.cpp	/^	asio::ip::tcp::socket socket;$/;"	m	class:Session	file:
socket	notes.cpp	/^	std::optional<asio::ip::tcp::socket> socket;$/;"	m	class:Server	file:
socket	src/connection.cpp	/^asio::ip::tcp::socket& Connection::socket(){$/;"	f	class:Connection
socket_	include/connection.h	/^	asio::ip::tcp::socket socket_; \/\/ Unique socket for each client$/;"	m	class:Connection
start	notes.cpp	/^		void start(){$/;"	f	class:Session
start	src/connection.cpp	/^void Connection::start(){$/;"	f	class:Connection
start_accept	src/server.cpp	/^void Server::start_accept(){$/;"	f	class:Server
streambuf	notes.cpp	/^	asio::streambuf streambuf;$/;"	m	class:Session	file:
vMin	include/serial.h	/^	int vMin = 1;$/;"	m	class:Serial
vTime	include/serial.h	/^	int vTime = 10;$/;"	m	class:Serial
volatile	CMakeFiles/3.19.2/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
wsCommand	src/main.cpp	/^bool wsCommand = false;$/;"	v
ws_magic_string	include/connection.h	/^const std::string ws_magic_string = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";$/;"	v
xor_decrypt	src/connection.cpp	/^void Connection::xor_decrypt(char* inBuffer){$/;"	f	class:Connection
~Connection	src/connection.cpp	/^Connection::~Connection(){$/;"	f	class:Connection
~Server	src/server.cpp	/^Server::~Server(){$/;"	f	class:Server
